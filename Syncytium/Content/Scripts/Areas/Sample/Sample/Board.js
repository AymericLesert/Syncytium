/// <reference path="../../../_references.js" />/// <reference path="Enum.js" />/// <reference path="List.js" />/// <reference path="ListArray.js" />/// <reference path="Box.js" />/** * Class handling a board of Sample of table */SampleRecord.Board = class extends GUI.Board.BoardTable {    /**     * Define the list of columns into the table     */    declareColumns () {        /*         * Update the field 'Enable' on clicking on the cell of the board         */        function handleClickEnable( board ) {            return function ( id, item, attribute ) {                var oldRecord = board.List.getItem( id, true );                if ( oldRecord === null )                    return;                var newRecord = DSRecord.Clone( oldRecord );                // Update the field                if ( newRecord.Enable === true )                    newRecord.Enable = false;                else                    newRecord.Enable = true;                // notify the database that something has changed                board.updateItem( oldRecord, newRecord );            };        }        // declare all columns        this.declareColumn( "Name"        , "SAMPLE_NAME"        , 5, 'left', ["Id"] );        this.declareColumn( "Picture"     , "SAMPLE_PICTURE"     , 3, 'center', false );        this.declareColumn( "Description" , "SAMPLE_DESCRIPTION" , 5, 'left', ["Id"] );        this.declareColumn( "Enable"      , "SAMPLE_ENABLE"      , 1, 'center', ["Id"] );        // declare events attached to each column        this.on( 'onClickEnable', handleClickEnable( this ) );    }    /**     * Constructor     * @param {any} box   string describing the html container, an html object or a GUI.Box     * @param {any} name  identify the board     * @param {any} title string describing the title of the table (using Helper.Span)     * @param {any} list  list of elements (See List.List)     */    constructor( box, name, title, list ) {        super( box, name, title ? title : "TITLE_SAMPLE", list ? list : new SampleRecord.List(), GUI.Board.BOARD_NONE );        this.setVisible( GUI.Board.BOARD_ADD + GUI.Board.BOARD_DELETE, true );        if ( !( list instanceof List.ListArrayRecord ) ) {            this.setVisible( GUI.Board.BOARD_HELP, true );            this.Help = Area.HTTP_ROOT_DOCUMENTATION + "module-d-administration/exemple";        }        this.draw();        this.Component.addClass( "sample" );    }};
