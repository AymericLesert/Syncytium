-- ---------------------------------- SQL SERVER ------------------------------------
-- Copyright (C) 2017 LESERT Aymeric - aymeric.lesert@concilium-lesert.fr
-- 
-- This program is free software; you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation; either version 2 of the License, or
-- (at your option) any later version.
-- 
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
-- GNU General Public License for more details.
-- 
-- You should have received a copy of the GNU General Public License along
-- with this program; if not, write to the Free Software Foundation, Inc.,
-- 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
-- 
-- 2017/09/12 - Aymeric Lesert - Create Differential Synchronization Model (DSModel)
-- ----------------------------------------------------------------------------------

-- ----------------------------------------------------------------------------------
-- Create table : _Parameter
--
-- This tables stores some internal parameters managed by the application itself
-- For example:
--  * Database.Version : current version of the database (based on the upgrade script)
--  * Database.Update  : date time of the last upgrade
--  * Database.Tick    : Last tick having updated the database
--          (different that Timestamp - in same case, you may have the same timestamp for 2 updates)
--          (by using a Tick, you are sure to have 2 differents values for 2 updates)
-- ----------------------------------------------------------------------------------

create table [${Syncytium.Database.Schema}].[_Parameter]
		([Key]   nvarchar(128)  not null primary key,
		 [Value] nvarchar(128))

GO

-- ----------------------------------------------------------------------------------
-- Create table : _Connection
--
-- This table stores current connection information to avoid that the same user is
-- connected twice to the application on the same machine.
--
-- In case of auto-scale (as the features allowed by the cloud azure), a user can be
-- connected to a server and can be switched to another server in case of abnormal
-- situation.
-- ----------------------------------------------------------------------------------

create table [${Syncytium.Database.Schema}].[_Connection]
		([ConnectionId]   nvarchar(36) not null primary key,
		 [Machine]        nvarchar(32) not null,
		 [CustomerId]     int          not null,
		 [UserId]         int          not null,
		 [Allow]          bit          not null,
		 [Profile]        int,
		 [Area]           nvarchar(32),
		 [ModuleId]       int          not null,
		 [Status]         bit          not null,
		 [ConnectionDate] datetime     not null,
		 [ConnectionLast] datetime     not null)

GO
create index I__CONNECTION_USER on [${Syncytium.Database.Schema}].[_Connection]([UserId])
GO
create index I__CONNECTION_CUSTOMER on [${Syncytium.Database.Schema}].[_Connection]([CustomerId])
GO

-- ----------------------------------------------------------------------------------
-- Create table : _Request
--
-- This table stores all requests received (except the details). Just for traceability.
-- ----------------------------------------------------------------------------------

create table [${Syncytium.Database.Schema}].[_Request]
		([Tick]           int          not null,
		 [CustomerId]     int          not null,
		 [UserId]         int          not null,
		 [RequestId]      int          not null,
		 [Area]           nvarchar(32),
		 [ModuleId]       int          not null,
		 [Table]          nvarchar(32),
		 [Action]         nvarchar(32),
		 [Id]             int,
		 [Acknowledge]    bit,
		 [Date]           datetime     not null)

GO
alter table [${Syncytium.Database.Schema}].[_Request] add constraint pk__request primary key([CustomerId], [Tick])
GO
create index I__REQUEST_CUSTOMER on [${Syncytium.Database.Schema}].[_Request]([CustomerId])
GO
create index I__REQUEST_TABLE on [${Syncytium.Database.Schema}].[_Request]([Table])
GO


-- ----------------------------------------------------------------------------------
-- Create table : _RequestId
--
-- This table stores for each userId the last requestId (for synchronization).
-- ----------------------------------------------------------------------------------

create table [${Syncytium.Database.Schema}].[_RequestId]
		([UserId]         int      not null primary key,
		 [RequestId]      int      not null,
		 [Date]           datetime not null)

GO

-- ----------------------------------------------------------------------------------
-- Create table : _SequenceId
--
-- This table stores for each tuple (userId, table) the last sequence id generated
-- (for synchronization).
-- ----------------------------------------------------------------------------------

create table [${Syncytium.Database.Schema}].[_SequenceId]
		([UserId]         int          not null,
		 [Table]          nvarchar(32) not null,
		 [SequenceId]     int          not null,
		 [Date]           datetime     not null);
GO

alter table [${Syncytium.Database.Schema}].[_SequenceId]
add constraint pk__SequenceId primary key ([UserId], [Table])

GO

-- ----------------------------------------------------------------------------------
-- Create table : _Information
--
-- This table stores some details about a record into the database:
--    - Creation information (used to link 2 requests by the ids from the client)
--    - Update information (used to synchronize data and to check if somebody has updated record at the same time)
--    - Delete information (any record are physically deleted in the database schema - virtual deleted)
-- ----------------------------------------------------------------------------------

create table [${Syncytium.Database.Schema}].[_Information]
		([Table]          nvarchar(32) not null,
		 [Id]             int          not null,
		 [CustomerId]     int          not null,
		 [CreateId]       int,
		 [CreateUserId]   int,
		 [CreateTick]     int,
		 [CreateDate]     datetime,
		 [UpdateUserId]   int,
		 [UpdateTick]     int,
		 [UpdateDate]     datetime,
		 [DeleteUserId]   int,
		 [DeleteTick]     int,
		 [DeleteDate]     datetime);
GO

alter table [${Syncytium.Database.Schema}].[_Information]
add constraint pk__Information primary key ([Table], [Id])

GO

create index I__INFORMATION_CUSTOMER on [${Syncytium.Database.Schema}].[_Information]([CustomerId])

GO

create index I__INFORMATION_TABLE on [${Syncytium.Database.Schema}].[_Information]([Table])

GO


-- ----------------------------------------------------------------------------------
-- Create table : _Ping
--
-- This table stores the last ping received by a client
-- ----------------------------------------------------------------------------------

create table [${Syncytium.Database.Schema}].[_Ping]
		([ConnectionId] nvarchar(36) not null primary key,
		 [Date]         datetime     not null)
